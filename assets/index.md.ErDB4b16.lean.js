import{_ as r,C as s,c as n,o as i,a4 as o,G as a}from"./chunks/framework.BpG6BfwF.js";const f=JSON.parse('{"title":"Future Enterprise Coding Standards","description":"","frontmatter":{"layout":"home","title":"Future Enterprise Coding Standards","hero":{"name":"Future Enterprise <wbr>Coding Standards","tagline":"<span style=\\"white-space: nowrap\\">フューチャー株式会社が作成する<wbr>エンタープライズ領域に特化した<wbr>コーディング規約</span>","actions":[{"theme":"brand","text":"Javaコーディング規約","link":"./documents/forJava/"},{"theme":"brand","text":"SQL コーディング規約","link":"./documents/forSQL/"},{"theme":"alt","text":"AWS インフラリソース命名規約","link":"./documents/forAWSResource"},{"theme":"alt","text":"OpenAPI Specification 規約","link":"./documents/forOpenAPISpecification"}]},"features":[{"title":"Readability","details":"ソースコードの可読性を高く保つことで、保守性・拡張性の高いソフトウェアを作ることができます。 しかし、可読性の指標は複数あり、デベロッパーごとに判断がブレ、それぞれのスタイルで記述すると、ソフトウェア全体で見たときの可読性が下がってしまいます。 本コーディング規約は、コーディング時の判断のブレを防ぎます。"},{"title":"Enterprise","details":"エンタープライズ領域では、社員・パートナーの方々を合わせて、数百人が同時に開発することも珍しくありません。 ちょっとした悩み、失敗も、人数が集まれば大変なコスト・リスクになります。 誰もが引っかかる落とし穴、悩みの種をあらかじめ排除します。"},{"title":"Performance","details":"時に読みやすいソースコードはパフォーマンス劣化を招くことがあります。 しかし、常にパフォーマンスを優先したソースコードは人間の読めないソースコードになりがちです。 今、書こうとしているソースコードが、どの程度のパフォーマンスになるのか、指標を示すことで、ソフトウェア開発プロジェクトごとに最適なソースコードを選択することができます。"}],"pageClass":"standards-home"},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),c={name:"index.md"};function d(l,e,u,m,p,h){const t=s("FutureStar");return i(),n("div",null,[e[0]||(e[0]=o("",3)),a(t,{kind:"1"}),a(t,{kind:"2"})])}const _=r(c,[["render",d]]);export{f as __pageData,_ as default};
