operation:
  summary: Details for a pet
  operationId: get-pets-pet-id
  tags:
    - pets
  parameters:
    - name: petId
      in: path
      required: true
      description: The id of the pet to retrieve
      schema:
        type: string
  responses:
    "200":
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            $ref: "#/components/responses/ResPetsPetIdGet"
          examples:
            ResExample1:
              value:
                $ref: "./examples/res_example1.yaml"
    "404":
      description: not found error
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Error"
    "500":
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Error"
components:
  schemas:
    PetDetail:
      type: object
      properties:
        breeder:
          type: string
        date_of_birth:
          type: string
          format: date
        pedigree:
          $ref: "#/components/schemas/Pedigree"
    Pedigree:
      required:
      - registration_no
      - date_of_registration
      - pedigree_image
      type: object
      properties:
        registration_no:
          type: integer
          format: int64
        date_of_registration:
          type: string
          format: date
        pedigree_image:
          type: string
  responses:
    ResPetsPetIdGet:
      required:
      - pet
      - pet_detail
      type: object
      properties:
        pet:
          $ref: "../common/pet.yaml"
        pet_detail:
          $ref: "#/components/schemas/PetDetail"